1、在Meteor中，关键字 var 限制对象的作用域在文件范围
        内。 我们想要 Posts 作用于整个APP范围内，因此我们在这里不要 Var 这个关键字。
2、如果你把应用部署在 *.meteor.com 上，你一样可以通过 meteor mongo myApp 的方式进入你应用的 Mongo shell 进行操作。
       而且你还可以输入 meteor logs myApp 得到你应用的 log 日志
3、清空app中的数据库和初始化项目：
        meteor reset
                注意，这是用在开发过程中，如果在实际上，慎重使用这个命令
4、meteor的发布与订阅，简单来说是对mongo数据库的集合进行条件查询然后显示；
   并且meteor默认是自动定义的，既是将所有的数据都从服务器中获取显示；
        meteor remove autopublish    //取消自动订
   然后在服务端发布，例如：
        Meteor.publish('posts', function() {
                return Posts.find();
        });                         //这里是服务端发布整个posts集合（collection）
   然后需要在客户端进行订阅定义，否则是获取不到数据显示的，例如：
        Meteor.subscribe('posts');  //这里是客户端订阅posts集合
        
   * 如果需要在服务端增加一个条件，例如发布帖子的作者为anxing的数据，则在服务端发布的代码为：
        Meteor.publish('posts', function(author){       //author 是posts中的一个字段，含义是作者
                return Posts.find({author:author});
        });

   * 则在客户端的代码就应该为：
        Meteor.subscribe('posts', 'anxing');  //订阅帖子作者为anxing的数据

   ** 注意，如果在服务端有了条件限制，则在客户端是拿不到数据的
        例如：服务端：
                Meteor.publish('posts', function() {
                        return Posts.find({flagged:false});
                });
              客户端：
                Meteor.subscribe({flagged:true}); //这样是没有数据操作的，因为服务端没有比到flagged为true的数据返回
                
5、meteor服务端发布类型：
        发布全部集合：
                Meteor.publish('allPosts', function(){
                        return Posts.find();
                });
        发布部分集合：
                Meteor.publish('somePosts', function(){
                        return Posts.find({'author': 'anxing'});   //发布author字段为anxing的集合   
                });
        发布部分字段：
                Meteor.publish('allPosts', function(){
                        return Posts.find({}, {fields: {
                                date: false                       //日期字段不发布
                        }});
                });
        混合发布：
                Meteor.publish('allPosts', function(){
                        return Posts.find({'author': 'anxing'}, {fields: {    //发布字段为anxing的集合并且隐藏date字段
                                date: false
                        }});
                });
